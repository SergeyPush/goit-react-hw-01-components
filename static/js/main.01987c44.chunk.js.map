{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Stats/Stats.module.css","components/App.module.css","components/Profile/Profile.jsx","components/Stats/Stats.jsx","components/FriendList/FriendList.jsx","components/Transactions/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["module","exports","Profile","user","className","style","profile","description","src","avatar","alt","name","tag","location","stats","label","quantity","followers","views","likes","Stats","title","statSection","statList","map","item","key","id","percentage","FriendList","friends","friendList","friend","statusClass","status","isOnline","push","green","red","join","width","TransactionHistory","items","type","amount","currency","App","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.01987c44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1lQQU\",\"item\":\"FriendList_item__-lYix\",\"avatar\":\"FriendList_avatar__2fiZr\",\"status\":\"FriendList_status__3C5jV\",\"red\":\"FriendList_red__j_mQp\",\"green\":\"FriendList_green__3axkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statSection\":\"Stats_statSection__iqffX\",\"title\":\"Stats_title__2lySv\",\"statList\":\"Stats_statList__sgtfU\",\"item\":\"Stats_item__1cWMo\",\"label\":\"Stats_label__2yRrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\"};","import React from 'react';\nimport T from 'prop-types';\nimport style from './Profile.module.css';\n\nconst Profile = ({ user }) => {\n  return (\n    <div className={style.profile}>\n      <div className={style.description}>\n        <img src={user.avatar} alt={user.name} className={style.avatar} />\n        <p className={style.name}>{user.name}</p>\n        <p className={style.tag}>@{user.tag}</p>\n        <p className={style.location}>{user.location}</p>\n      </div>\n\n      <ul className={style.stats}>\n        <li>\n          <span className={style.label}>Followers </span>\n          <span className={style.quantity}>{user.stats.followers}</span>\n        </li>\n        <li>\n          <span className={style.label}>Views </span>\n          <span className={style.quantity}>{user.stats.views}</span>\n        </li>\n        <li>\n          <span className={style.label}>Likes </span>\n          <span className={style.quantity}>{user.stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  user: T.shape({\n    name: T.string.isRequired,\n    tag: T.string.isRequired,\n    location: T.string.isRequired,\n    avatar: T.string.isRequired,\n    stats: T.shape({\n      followers: T.number.isRequired,\n      likes: T.number.isRequired,\n      views: T.number.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport T from 'prop-types';\nimport style from './Stats.module.css';\n\nconst Stats = ({ title, stats }) => {\n  return (\n    <section className={style.statSection}>\n      <h2 className={style.title}>{title}</h2>\n      <ul className={style.statList}>\n        {stats.map(item => {\n          return (\n            <li className={style.item} key={item.id}>\n              <span className={style.label}>{item.label}</span>\n              <span className={style.percentage}>{item.percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStats.propTypes = {\n  title: T.string.isRequired,\n  stats: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      label: T.string.isRequired,\n      percentage: T.number.isRequired,\n    }),\n  ).isRequired,\n};\nexport default Stats;\n","import React from 'react';\nimport T from 'prop-types';\n\nimport style from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <div>\n      <ul className={style.friendList}>\n        {friends.map(friend => {\n          const statusClass = [style.status];\n          if (friend.isOnline) {\n            statusClass.push(style.green);\n          } else {\n            statusClass.push(style.red);\n          }\n          return (\n            <li className={style.item} key={friend.id}>\n              <span className={statusClass.join(' ')} />\n              <img\n                className={style.avatar}\n                src={friend.avatar}\n                alt={friend.name}\n                width=\"48\"\n              />\n              <p className={style.name}>{friend.name}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nFriendList.propTypes = {\n  friends: T.arrayOf(\n    T.shape({\n      avatar: T.string.isRequired,\n      id: T.number.isRequired,\n      isOnline: T.bool.isRequired,\n      name: T.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default FriendList;\n","import React from 'react';\nimport T from 'prop-types';\n\nimport './TransactionHistory.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => {\n          return (\n            <tr key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.amount}</td>\n              <td>{item.currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: T.arrayOf(\n    T.shape({\n      amount: T.string.isRequired,\n      currency: T.string.isRequired,\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport Profile from './Profile/Profile';\nimport Stats from './Stats/Stats';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './Transactions/TransactionHistory';\n\nimport user from '../data/user.json';\nimport friends from '../data/friends.json';\nimport transactions from '../data/transactions.json';\n\nimport './App.module.css';\n\nconst stats = [\n  { id: 'id-1', label: '.docx', percentage: 22 },\n  { id: 'id-2', label: '.pdf', percentage: 4 },\n  { id: 'id-3', label: '.mp3', percentage: 17 },\n  { id: 'id-4', label: '.psd', percentage: 47 },\n  { id: 'id-5', label: '.pdf', percentage: 10 },\n];\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <Profile user={user} />\n      <hr />\n      <Stats title=\"Upload stats\" stats={stats} />\n      <hr />\n      <FriendList friends={friends} />\n      <hr />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}